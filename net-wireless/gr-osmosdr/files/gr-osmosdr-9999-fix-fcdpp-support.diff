diff --git a/lib/config.h.in b/lib/config.h.in
index 66c3e1b..40b023a 100644
--- a/lib/config.h.in
+++ b/lib/config.h.in
@@ -6,6 +6,7 @@
 
 #cmakedefine ENABLE_OSMOSDR
 #cmakedefine ENABLE_FCD
+#cmakedefine ENABLE_FCDPP
 #cmakedefine ENABLE_FILE
 #cmakedefine ENABLE_RTL
 #cmakedefine ENABLE_RTL_TCP
diff --git a/lib/device.cc b/lib/device.cc
index d8fcfba..b9734b9 100644
--- a/lib/device.cc
+++ b/lib/device.cc
@@ -38,6 +38,10 @@
 #include <fcd_source_c.h>
 #endif
 
+#ifdef ENABLE_FCDPP
+#include <fcd_source_c.h>
+#endif
+
 #ifdef ENABLE_FILE
 #include <file_source_c.h>
 #endif
@@ -138,7 +142,7 @@ devices_t device::find(const device_t &hint)
   BOOST_FOREACH( std::string dev, osmosdr_src_c::get_devices() )
     devices.push_back( device_t(dev) );
 #endif
-#ifdef ENABLE_FCD
+#if defined(ENABLE_FCD) || defined(ENABLE_FCDPP)
   BOOST_FOREACH( std::string dev, fcd_source_c::get_devices() )
     devices.push_back( device_t(dev) );
 #endif
diff --git a/lib/source_impl.cc b/lib/source_impl.cc
index 5d7d305..7852c62 100644
--- a/lib/source_impl.cc
+++ b/lib/source_impl.cc
@@ -36,7 +36,7 @@
 #include <osmosdr_src_c.h>
 #endif
 
-#ifdef ENABLE_FCD
+#if defined(ENABLE_FCD) || defined(ENABLE_FCDPP)
 #include <fcd_source_c.h>
 #endif
 
@@ -123,7 +123,7 @@ source_impl::source_impl( const std::string &args )
 #ifdef ENABLE_OSMOSDR
   dev_types.push_back("osmosdr");
 #endif
-#ifdef ENABLE_FCD
+#if defined(ENABLE_FCD) || defined(ENABLE_FCDPP)
   dev_types.push_back("fcd");
 #endif
 #ifdef ENABLE_RTL
@@ -188,7 +188,7 @@ source_impl::source_impl( const std::string &args )
     BOOST_FOREACH( std::string dev, osmosdr_src_c::get_devices() )
       dev_list.push_back( dev );
 #endif
-#ifdef ENABLE_FCD
+#if defined(ENABLE_FCD) || defined(ENABLE_FCDPP)
     BOOST_FOREACH( std::string dev, fcd_source_c::get_devices() )
       dev_list.push_back( dev );
 #endif
@@ -257,7 +257,7 @@ source_impl::source_impl( const std::string &args )
     }
 #endif
 
-#ifdef ENABLE_FCD
+#if defined(ENABLE_FCD) || defined(ENABLE_FCDPP)
     if ( dict.count("fcd") ) {
       fcd_source_c_sptr src = make_fcd_source_c( arg );
       block = src; iface = src.get();
